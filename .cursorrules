## Tech Stack

- App: Node.js with Fastify
- Database: PostgreSQL with Prisma
- Authentication: JSON Web Tokens (JWT)
- Version Control: Git
- Language: TypeScript

## Do's

- Use TypeScript for type safety. prefer interfaces over types.
- When generating code, prioritize TypeScript best practices.
- Follow the coding standards defined in the ESLint configuration.
- Minimize the use of AI generated comments, instead use clearly named variables and functions.
- Use functional and declarative programming patterns; avoid classes.
- Prefer native functions over custom or Lodash's
- Use Lodash helpers instead of custom solutions
- Maintain consistency in naming and problem-solving
- Write indistinguishable, simple, and clean code
- Use modern (ES6) solutions, e.g. Object destructuring

## Don'ts

- Avoid strings for properties in Lodash functions
- Prioritize clean code over performance unless necessary
- Avoid `any` type unless absolutely needed
- Prefer simple solutions over complex ones
- Use `async`/`await` instead of callbacks or `then()`

## Naming

- Use simple, consistent names. When in doubt, name by type (e.g., `user`, `task`)
- Use camelCase for directories & files (e.g., portfolioFund) and files (e.g. portfolioFund.ts)

### By type

- `Boolean`: Start with `is`, `can`, `are` (e.g., `isActive`)
- `Date`: End with `At` (e.g., `createdAt`)
- `Array`: Use plural form (e.g., `users`)
- `Object`: Use plural or `Map` suffix (e.g., `userMap`)
- Enums: Use TitleCase (e.g., `FundCategory`)
- Queries: Noun for one, plural for many (e.g., `fund`, `stocks`)
- Mutations: Verb+Noun (e.g., `updatePortfolio`)

## Misc

- Before providing a block of code, reason about what is requested and the context provided first

## Commit messages

- Start with an Action Verb: Use verbs like "Add", "Refactor", "Fix", "Implement", "Update", "Delete"
- Be specific: Clearly state the main change or feature in no more than 15 words
- Provide context: Briefly mention the purpose or impact if needed, keeping the entire message under 120 characters

# Additional Resources

- [TypeScript Handbook](https://www.typescriptlang.org/docs/)
- [Prisma Documentation](https://www.prisma.io/docs)
- [Fastify Documentation](https://www.fastify.io/docs/)
- [PostgreSQL Documentation](https://www.postgresql.org/docs/)
- [JWT Documentation](https://jwt.io/)
- [Git Documentation](https://git-scm.com/docs)
